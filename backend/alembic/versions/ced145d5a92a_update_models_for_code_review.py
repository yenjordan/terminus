"""Update models for code review

Revision ID: ced145d5a92a
Revises: b20b9ceed960
Create Date: 2025-07-23 16:33:51.748349

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'ced145d5a92a'
down_revision: Union[str, None] = 'b20b9ceed960'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_code_sessions_id'), table_name='code_sessions')
    op.drop_table('code_sessions')
    op.drop_index(op.f('ix_code_files_id'), table_name='code_files')
    op.drop_table('code_files')
    op.drop_index(op.f('ix_code_executions_id'), table_name='code_executions')
    op.drop_table('code_executions')
    op.add_column('code_reviews', sa.Column('quality_before', sa.Integer(), nullable=True))
    op.add_column('code_reviews', sa.Column('edits_made', sa.Text(), nullable=True))
    op.add_column('code_reviews', sa.Column('quality_after', sa.Integer(), nullable=True))
    op.add_column('code_reviews', sa.Column('is_customer_ready', sa.Boolean(), nullable=True))
    op.add_column('code_reviews', sa.Column('edited_code', sa.Text(), nullable=True))
    op.add_column('code_reviews', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('code_reviews', 'submission_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('code_reviews', 'reviewer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('code_reviews', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('code_reviews', 'rating')
    op.drop_column('code_reviews', 'review_time_minutes')
    op.alter_column('code_submissions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_code_submissions_task_id'), table_name='code_submissions')
    op.create_index(op.f('ix_code_submissions_task_id'), 'code_submissions', ['task_id'], unique=False)
    op.drop_constraint(None, 'code_submissions', type_='foreignkey')
    op.create_foreign_key(None, 'code_submissions', 'sessions', ['session_id'], ['id'])
    op.create_foreign_key(None, 'code_submissions', 'users', ['claimed_by'], ['id'])
    op.create_foreign_key(None, 'code_submissions', 'files', ['file_id'], ['id'])
    op.drop_column('code_submissions', 'priority')
    op.drop_column('code_submissions', 'files_snapshot')
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'reset_token')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('reset_token', sa.VARCHAR(), nullable=True))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('code_submissions', sa.Column('files_snapshot', sqlite.JSON(), nullable=True))
    op.add_column('code_submissions', sa.Column('priority', sa.VARCHAR(), nullable=True))
    op.drop_constraint(None, 'code_submissions', type_='foreignkey')
    op.drop_constraint(None, 'code_submissions', type_='foreignkey')
    op.drop_constraint(None, 'code_submissions', type_='foreignkey')
    op.create_foreign_key(None, 'code_submissions', 'code_sessions', ['session_id'], ['id'])
    op.drop_index(op.f('ix_code_submissions_task_id'), table_name='code_submissions')
    op.create_index(op.f('ix_code_submissions_task_id'), 'code_submissions', ['task_id'], unique=1)
    op.alter_column('code_submissions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('code_reviews', sa.Column('review_time_minutes', sa.FLOAT(), nullable=True))
    op.add_column('code_reviews', sa.Column('rating', sa.INTEGER(), nullable=True))
    op.alter_column('code_reviews', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('code_reviews', 'reviewer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('code_reviews', 'submission_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('code_reviews', 'updated_at')
    op.drop_column('code_reviews', 'edited_code')
    op.drop_column('code_reviews', 'is_customer_ready')
    op.drop_column('code_reviews', 'quality_after')
    op.drop_column('code_reviews', 'edits_made')
    op.drop_column('code_reviews', 'quality_before')
    op.create_table('code_executions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('session_id', sa.INTEGER(), nullable=False),
    sa.Column('command', sa.TEXT(), nullable=False),
    sa.Column('input_data', sa.TEXT(), nullable=True),
    sa.Column('output', sa.TEXT(), nullable=True),
    sa.Column('error', sa.TEXT(), nullable=True),
    sa.Column('exit_code', sa.INTEGER(), nullable=True),
    sa.Column('execution_time_ms', sa.FLOAT(), nullable=True),
    sa.Column('memory_usage_mb', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['code_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_code_executions_id'), 'code_executions', ['id'], unique=False)
    op.create_table('code_files',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('path', sa.VARCHAR(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('file_type', sa.VARCHAR(), nullable=False),
    sa.Column('session_id', sa.INTEGER(), nullable=False),
    sa.Column('size_bytes', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['code_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_code_files_id'), 'code_files', ['id'], unique=False)
    op.create_table('code_sessions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('last_accessed', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_code_sessions_id'), 'code_sessions', ['id'], unique=False)
    # ### end Alembic commands ###
